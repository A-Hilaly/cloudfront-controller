// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package origin_request_policy

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
	acktags "github.com/aws-controllers-k8s/runtime/pkg/tags"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
	_ = &acktags.Tags{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}

	if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig, b.ko.Spec.OriginRequestPolicyConfig) {
		delta.Add("Spec.OriginRequestPolicyConfig", a.ko.Spec.OriginRequestPolicyConfig, b.ko.Spec.OriginRequestPolicyConfig)
	} else if a.ko.Spec.OriginRequestPolicyConfig != nil && b.ko.Spec.OriginRequestPolicyConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.Comment, b.ko.Spec.OriginRequestPolicyConfig.Comment) {
			delta.Add("Spec.OriginRequestPolicyConfig.Comment", a.ko.Spec.OriginRequestPolicyConfig.Comment, b.ko.Spec.OriginRequestPolicyConfig.Comment)
		} else if a.ko.Spec.OriginRequestPolicyConfig.Comment != nil && b.ko.Spec.OriginRequestPolicyConfig.Comment != nil {
			if *a.ko.Spec.OriginRequestPolicyConfig.Comment != *b.ko.Spec.OriginRequestPolicyConfig.Comment {
				delta.Add("Spec.OriginRequestPolicyConfig.Comment", a.ko.Spec.OriginRequestPolicyConfig.Comment, b.ko.Spec.OriginRequestPolicyConfig.Comment)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig) {
			delta.Add("Spec.OriginRequestPolicyConfig.CookiesConfig", a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig)
		} else if a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig != nil && b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior) {
				delta.Add("Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior", a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior)
			} else if a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior != nil && b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior != nil {
				if *a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior != *b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior {
					delta.Add("Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior", a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies) {
				delta.Add("Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies", a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies)
			} else if a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies != nil && b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies != nil {
				if len(a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items) != len(b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items) {
					delta.Add("Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items", a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items)
				} else if len(a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items) > 0 {
					if !ackcompare.SliceStringPEqual(a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items) {
						delta.Add("Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items", a.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items, b.ko.Spec.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig) {
			delta.Add("Spec.OriginRequestPolicyConfig.HeadersConfig", a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig)
		} else if a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig != nil && b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior) {
				delta.Add("Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior", a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior)
			} else if a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior != nil && b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior != nil {
				if *a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior != *b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior {
					delta.Add("Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior", a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers) {
				delta.Add("Spec.OriginRequestPolicyConfig.HeadersConfig.Headers", a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers)
			} else if a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers != nil && b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers != nil {
				if len(a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items) != len(b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items) {
					delta.Add("Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items", a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items)
				} else if len(a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items) > 0 {
					if !ackcompare.SliceStringPEqual(a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items) {
						delta.Add("Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items", a.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items, b.ko.Spec.OriginRequestPolicyConfig.HeadersConfig.Headers.Items)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.Name, b.ko.Spec.OriginRequestPolicyConfig.Name) {
			delta.Add("Spec.OriginRequestPolicyConfig.Name", a.ko.Spec.OriginRequestPolicyConfig.Name, b.ko.Spec.OriginRequestPolicyConfig.Name)
		} else if a.ko.Spec.OriginRequestPolicyConfig.Name != nil && b.ko.Spec.OriginRequestPolicyConfig.Name != nil {
			if *a.ko.Spec.OriginRequestPolicyConfig.Name != *b.ko.Spec.OriginRequestPolicyConfig.Name {
				delta.Add("Spec.OriginRequestPolicyConfig.Name", a.ko.Spec.OriginRequestPolicyConfig.Name, b.ko.Spec.OriginRequestPolicyConfig.Name)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig) {
			delta.Add("Spec.OriginRequestPolicyConfig.QueryStringsConfig", a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig)
		} else if a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig != nil && b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior) {
				delta.Add("Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior", a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior)
			} else if a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior != nil && b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior != nil {
				if *a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior != *b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior {
					delta.Add("Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior", a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings) {
				delta.Add("Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings", a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings)
			} else if a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings != nil && b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings != nil {
				if len(a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items) != len(b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items) {
					delta.Add("Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items", a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items)
				} else if len(a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items) > 0 {
					if !ackcompare.SliceStringPEqual(a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items) {
						delta.Add("Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items", a.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items, b.ko.Spec.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items)
					}
				}
			}
		}
	}

	return delta
}
